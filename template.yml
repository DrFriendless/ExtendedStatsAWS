AWSTemplateFormatVersion: 2010-09-09
Transform:
- AWS::Serverless-2016-10-31
- AWS::CodeStar

Parameters:
  ProjectId:
    Type: String
    Description: AWS CodeStar projectID used to associate new resources to team members

Resources:
  # deprecated
  UserListQueue:
    Type: "AWS::SQS::Queue"
    Properties:
      MessageRetentionPeriod: 600

#  GetHelloWorld:
#    Type: AWS::Serverless::Function
#    Properties:
#      Handler: index.get
#      Runtime: nodejs6.10
#      Role:
#        Fn::ImportValue:
#          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
#      Events:
#        GetEvent:
#          Type: Api
#          Properties:
#            Path: /
#            Method: get

  UserListToMongo:
    Type: AWS::Serverless::Function
    Properties:
      Handler: users.writeToDB
      Runtime: nodejs6.10
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
      Environment:
        Variables:
          QUEUE_URL: {Ref: UserListQueue}

  UserListNotification:
    Type: "AWS::SNS::Topic"
    Properties:
      TopicName: "userlists"
      Subscription:
        - Endpoint:
            Fn::GetAtt: [ "UserListToMongo", "Arn" ]
          Protocol: lambda

  UserListFromPastebin:
    Type: AWS::Serverless::Function
    Properties:
      Handler: users.readFromPastebin
      Runtime: nodejs6.10
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
      Environment:
        Variables:
          SNS_ENDPOINT: !Ref 'UserListNotification'
          QUEUE_URL: !Ref  'UserListQueue'

  SNSInvokeLambdaPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: "lambda:InvokeFunction"
      Principal: "sns.amazonaws.com"
      SourceArn: !Ref "UserListNotification"
      FunctionName:
        Fn::GetAtt: [ "UserListToMongo", "Arn" ]